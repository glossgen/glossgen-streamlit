[project]
name = "glossgen"
version = "0.1.0"
description = "GlossGen - AI-powered data exploration and glossary generation tool"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Business Source License 1.1"}
authors = [
    {name = "GlossGen Team", email = "info@glossgen.ai"}
]
dependencies = [
    "asyncio==3.4.3",
    "fastapi==0.115.5",
    "langchain==0.3.7",
    "langchain-openai==0.2.9",
    "langchainhub==0.1.21",
    "neo4j==5.27.0",
    "langchain_neo4j==0.1.1",
    "langchain-community==0.3.7",
    "langchain_experimental==0.3.4",
    "openai==1.54.5",
    "pydantic==2.9.2",
    "httpx==0.27.2",
    "opentelemetry-api",
    "uvicorn",
    "requests==2.31.0",
    "streamlit==1.29.0",
    "retry==0.9.2",
    "python-dotenv",
    "pymysql==1.1.1",
    "streamlit_agraph==0.0.45",
    "matplotlib==3.10.1",
    "networkx==3.4.2",
    "plotly==6.0.0",
    "xlsxwriter==3.2.2",
    "tabulate==0.9.0",
    "pandas>=1.5.3",
    "sqlalchemy>=2.0.0",
]

[project.optional-dependencies]
mssql = ["pymssql==2.3.2"]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
]
claude = ["anthropic==0.49.0", "langchain-anthropic==0.3.9"]
gemini = ["langchain_google_genai==2.0.11", "google-generativeai==0.8.4"]
all = [
    "pymssql==2.3.2",
    "anthropic==0.49.0",
    "langchain-anthropic==0.3.9",
    "langchain_google_genai==2.0.11",
    "google-generativeai==0.8.4",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["glossgen"]

[tool.black]
line-length = 88
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true 